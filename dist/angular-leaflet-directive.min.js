/*! angular-leaflet-directive 18-09-2013 */
var leafletDirective=angular.module("leaflet-directive",[]);leafletDirective.directive("leaflet",["$http","$log","$parse","$rootScope",function($http,$log,$parse,$rootScope){var defaults={maxZoom:14,minZoom:1,doubleClickZoom:!0,scrollWheelZoom:!0,zoomControl:!0,zoomsliderControl:!1,layercontrol:{position:"topright",control:L.control.layers,collapsed:!0},tileLayer:"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",tileLayerOptions:{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'},icon:{url:"http://cdn.leafletjs.com/leaflet-0.6.4/images/marker-icon.png",retinaUrl:"http://cdn.leafletjs.com/leaflet-0.6.4/images/marker-icon@2x.png",size:[25,41],anchor:[12,40],popup:[0,-40],shadow:{url:"http://cdn.leafletjs.com/leaflet-0.6.4/images/marker-shadow.png",retinaUrl:"http://cdn.leafletjs.com/leaflet-0.6.4/images/marker-shadow.png",size:[41,41],anchor:[12,40]}},path:{weight:10,opacity:1,color:"#0000ff"},center:{lat:0,lng:0,zoom:1}},LeafletIcon=L.Icon.extend({options:{iconUrl:defaults.icon.url,iconRetinaUrl:defaults.icon.retinaUrl,iconSize:defaults.icon.size,iconAnchor:defaults.icon.anchor,popupAnchor:defaults.icon.popup,shadowUrl:defaults.icon.shadow.url,shadowRetinaUrl:defaults.icon.shadow.retinaUrl,shadowSize:defaults.icon.shadow.size,shadowAnchor:defaults.icon.shadow.anchor}}),Helpers={AwesomeMarkersPlugin:{isLoaded:function(){return void 0!==L.AwesomeMarkers?void 0!==L.AwesomeMarkers.Icon:!1},is:function(a){return this.isLoaded()?a instanceof L.AwesomeMarkers.Icon:!1},equal:function(a,b){return this.isLoaded?this.is(a)&&this.is(b)?a.options.icon===b.options.icon&&a.options.iconColor===b.options.iconColor&&a.options.color===b.options.color&&a.options.iconSize[0]===b.options.iconSize[0]&&a.options.iconSize[1]===b.options.iconSize[1]&&a.options.iconAnchor[0]===b.options.iconAnchor[0]&&a.options.iconAnchor[1]===b.options.iconAnchor[1]&&a.options.popupAnchor[0]===b.options.popupAnchor[0]&&a.options.popupAnchor[1]===b.options.popupAnchor[1]&&a.options.shadowAnchor[0]===b.options.shadowAnchor[0]&&a.options.shadowAnchor[1]===b.options.shadowAnchor[1]&&a.options.shadowSize[0]===b.options.shadowSize[0]&&a.options.shadowSize[1]===b.options.shadowSize[1]:!1:($log.error("[AngularJS - Leaflet] AwesomeMarkers Plugin not Loaded"),!1)}},MarkerClusterPlugin:{isLoaded:function(){return void 0!==L.MarkerClusterGroup},is:function(a){return this.isLoaded()?a instanceof L.MarkerClusterGroup:!1}},GoogleLayerPlugin:{isLoaded:function(){return void 0!==L.Google},is:function(a){return this.isLoaded()?a instanceof L.Google:!1}},BingLayerPlugin:{isLoaded:function(){return void 0!==L.BingLayer},is:function(a){return this.isLoaded()?a instanceof L.BingLayer:!1}},Leaflet:{DivIcon:{is:function(a){return a instanceof L.DivIcon},equal:function(a,b){return this.is(a)&&this.is(b)?a.options.html===b.options.html&&a.options.iconSize[0]===b.options.iconSize[0]&&a.options.iconSize[1]===b.options.iconSize[1]&&a.options.iconAnchor[0]===b.options.iconAnchor[0]&&a.options.iconAnchor[1]===b.options.iconAnchor[1]:!1}},Icon:{is:function(a){return a instanceof L.Icon},equal:function(a,b){return this.is(a)&&this.is(b)?a.options.iconUrl===b.options.iconUrl&&a.options.iconRetinaUrl===b.options.iconRetinaUrl&&a.options.iconSize[0]===b.options.iconSize[0]&&a.options.iconSize[1]===b.options.iconSize[1]&&a.options.iconAnchor[0]===b.options.iconAnchor[0]&&a.options.iconAnchor[1]===b.options.iconAnchor[1]&&a.options.shadowUrl===b.options.shadowUrl&&a.options.shadowRetinaUrl===b.options.shadowRetinaUrl&&a.options.shadowSize[0]===b.options.shadowSize[0]&&a.options.shadowSize[1]===b.options.shadowSize[1]&&a.options.shadowAnchor[0]===b.options.shadowAnchor[0]&&a.options.shadowAnchor[1]===b.options.shadowAnchor[1]&&a.options.popupAnchor[0]===b.options.popupAnchor[0]&&a.options.popupAnchor[1]===b.options.popupAnchor[1]:!1}}}},str_inspect_hint='Add testing="testing" to <leaflet> tag to inspect this object';return{restrict:"E",replace:!0,transclude:!0,scope:{center:"=center",maxBounds:"=maxbounds",bounds:"=bounds",marker:"=marker",markers:"=markers",legend:"=legend",geojson:"=geojson",defaults:"=defaults",paths:"=paths",tiles:"=tiles",events:"=events",layers:"=layers",customControls:"=customControls"},template:'<div class="angular-leaflet-map"></div>',link:function($scope,element,attrs){function _isSafeToApply(){var a=$scope.$root.$$phase;return!("$apply"===a||"$digest"===a)}function safeApply(a){_isSafeToApply()?$scope.$apply(a):$scope.$eval(a)}function setupMapEventBroadcasting(){function a(a){return function(b){var c="leafletDirectiveMap."+a;safeApply(function(){$rootScope.$broadcast(c,{leafletEvent:b})})}}for(var b=["click","dblclick","mousedown","mouseup","mouseover","mouseout","mousemove","contextmenu","focus","blur","preclick","load","unload","viewreset","movestart","move","moveend","dragstart","drag","dragend","zoomstart","zoomend","zoomlevelschange","resize","autopanstart","layeradd","layerremove","baselayerchange","overlayadd","overlayremove","locationfound","locationerror","popupopen","popupclose"],c=0;c<b.length;c++){var d=b[c];map.on(d,a(d),{eventName:d})}}function setupMapEventCallbacks(){if("object"!=typeof $scope.events)return!1;for(var a in $scope.events)map.on(a,$scope.events[a])}function setupLayers(){if(void 0===$scope.layers||null===$scope.layers)setupTiles();else{if(void 0===$scope.layers.baselayers||null===$scope.layers.baselayers||"object"!=typeof $scope.layers.baselayers)return $log.error("[AngularJS - Leaflet] At least one baselayer has to be defined"),$scope.leaflet.layers=attrs.testing?layers:str_inspect_hint,void 0;if(Object.keys($scope.layers.baselayers).length<=0)return $log.error("[AngularJS - Leaflet] At least one baselayer has to be defined"),$scope.leaflet.layers=attrs.testing?layers:str_inspect_hint,void 0;if(layers={},layers.baselayers={},layers.controls={},$scope.defaults){var a={collapsed:$scope.defaults.layercontrol&&$scope.defaults.layercontrol.collapsed};layers.controls.layers=$scope.defaults.layercontrol&&$scope.defaults.layercontrol.control?$scope.defaults.layercontrol.control.apply(this,[[],[],a]):new L.control.layers([[],[],a]),$scope.defaults.layercontrol&&$scope.defaults.layercontrol.position&&layers.controls.layers.setPosition($scope.defaults.layercontrol.position)}layers.controls.layers.addTo(map);var b=!1;for(var c in $scope.layers.baselayers){var d=createLayer($scope.layers.baselayers[c]);null!==d&&(layers.baselayers[c]=d,$scope.layers.baselayers[c].top===!0&&(map.addLayer(layers.baselayers[c]),b=!0),layers.controls.layers.addBaseLayer(layers.baselayers[c],$scope.layers.baselayers[c].name))}!b&&Object.keys(layers.baselayers).length>0&&map.addLayer(layers.baselayers[Object.keys($scope.layers.baselayers)[0]]),layers.overlays={};for(c in $scope.layers.overlays){var e=createLayer($scope.layers.overlays[c]);null!==e&&(layers.overlays[c]=e,$scope.layers.overlays[c].visible===!0&&map.addLayer(layers.overlays[c]),layers.controls.layers.addOverlay(layers.overlays[c],$scope.layers.overlays[c].name))}$scope.$watch("layers.baselayers",function(a){var b=!1;for(var c in layers.baselayers)void 0===a[c]&&(layers.controls.layers.removeLayer(layers.baselayers[c]),map.hasLayer(layers.baselayers[c])&&map.removeLayer(layers.baselayers[c]),delete layers.baselayers[c],b=!0);for(var d in a)if(void 0===layers.baselayers[d]){var e=createLayer(a[d]);null!==e&&(layers.baselayers[d]=e,a[d].top===!0&&map.addLayer(layers.baselayers[d]),layers.controls.layers.addBaseLayer(layers.baselayers[d],a[d].name))}if(Object.keys(layers.baselayers).length<=0)$log.error("[AngularJS - Leaflet] At least one baselayer has to be defined");else{var f=!1;for(var g in layers.baselayers)if(map.hasLayer(layers.baselayers[g])){f=!0;break}f||map.addLayer(layers.baselayers[Object.keys($scope.layers.baselayers)[0]])}},!0),$scope.$watch("layers.overlays",function(a){for(var b in layers.overlays)void 0===a[b]&&(layers.controls.layers.removeLayer(layers.overlays[b]),map.hasLayer(layers.overlays[b])&&map.removeLayer(layers.overlays[b]),delete layers.overlays[b]);for(var c in a)if(void 0===layers.overlays[c]){var d=createLayer(a[c]);null!==d&&(layers.overlays[c]=d,layers.controls.layers.addOverlay(layers.overlays[c],a[c].name),a[c].visible===!0&&map.addLayer(layers.overlays[c]))}},!0)}$scope.leaflet.layers=attrs.testing?layers:str_inspect_hint}function createLayer(a){if(void 0===a.type||null===a.type||"string"!=typeof a.type)return $log.error("[AngularJS - Leaflet] A base layer must have a type"),null;if("xyz"!==a.type&&"wms"!==a.type&&"group"!==a.type&&"markercluster"!==a.type&&"google"!==a.type&&"bing"!==a.type)return $log.error('[AngularJS - Leaflet] A layer must have a valid type: "xyz, wms, group, google"'),null;if(!("xyz"!==a.type&&"wms"!==a.type||void 0!==a.url&&null!==a.url&&"string"==typeof a.url))return $log.error("[AngularJS - Leaflet] A base layer must have an url"),null;if(void 0===a.name||null===a.name||"string"!=typeof a.name)return $log.error("[AngularJS - Leaflet] A base layer must have a name"),null;(void 0===a.layerParams||null===a.layerParams||"object"!=typeof a.layerParams)&&(a.layerParams={}),(void 0===a.layerOptions||null===a.layerOptions||"object"!=typeof a.layerOptions)&&(a.layerOptions={});var b=null;for(var c in a.layerParams)a.layerOptions[c]=a.layerParams[c];switch(a.type){case"xyz":b=createXyzLayer(a.url,a.layerOptions);break;case"wms":b=createWmsLayer(a.url,a.layerOptions);break;case"group":b=createGroupLayer();break;case"markercluster":b=createMarkerClusterLayer(a.layerOptions);break;case"google":b=createGoogleLayer(a.layerType,a.layerOptions);break;case"bing":b=createBingLayer(a.bingKey,a.layerOptions);break;default:b=null}return b}function createXyzLayer(a,b){var c=L.tileLayer(a,b);return c}function createWmsLayer(url,options){options.crs&&"string"==typeof options.crs&&(options.crs=eval(options.crs));var layer=L.tileLayer.wms(url,options);return layer}function createGroupLayer(){var a=L.layerGroup();return a}function createMarkerClusterLayer(a){if(Helpers.MarkerClusterPlugin.isLoaded()){var b=new L.MarkerClusterGroup(a);return b}return null}function createGoogleLayer(a,b){if(a=a||"SATELLITE",Helpers.GoogleLayerPlugin.isLoaded()){var c=new L.Google(a,b);return c}return null}function createBingLayer(a,b){if(Helpers.BingLayerPlugin.isLoaded()){var c=new L.BingLayer(a,b);return c}return null}function setupTiles(){var a,b;if($scope.leaflet.tileLayer=attrs.defaults&&$scope.defaults&&$scope.defaults.tileLayer?$scope.defaults.tileLayer:defaults.tileLayer,$scope.defaults&&$scope.defaults.tileLayerOptions)for(b in $scope.defaults.tileLayerOptions)defaults.tileLayerOptions[b]=$scope.defaults.tileLayerOptions[b];if(attrs.tiles){if($scope.tiles&&$scope.tiles.url&&($scope.leaflet.tileLayer=$scope.tiles.url),$scope.tiles&&$scope.tiles.options)for(b in $scope.tiles.options)defaults.tileLayerOptions[b]=$scope.tiles.options[b];$scope.$watch("tiles.url",function(b){b&&a.setUrl(b)})}a=L.tileLayer($scope.leaflet.tileLayer,defaults.tileLayerOptions),a.addTo(map),$scope.leaflet.tileLayerObj=attrs.testing?a:str_inspect_hint}function setupLegend(){if($scope.legend)if($scope.legend.colors&&$scope.legend.labels&&$scope.legend.colors.length===$scope.legend.labels.length){var a=$scope.legend.position||"bottomright",b=L.control({position:a});b.onAdd=function(){for(var a=L.DomUtil.create("div","info legend"),b=0;b<$scope.legend.colors.length;b++)a.innerHTML+='<div class="outline"><i style="background:'+$scope.legend.colors[b]+'"></i></div> '+$scope.legend.labels[b]+"<br />";return a},b.addTo(map)}else $log.warn("[AngularJS - Leaflet] legend.colors and legend.labels must be set.")}function setupMaxBounds(){$scope.maxBounds&&$scope.maxBounds.southWest&&$scope.maxBounds.southWest.lat&&$scope.maxBounds.southWest.lng&&$scope.maxBounds.northEast&&$scope.maxBounds.northEast.lat&&$scope.maxBounds.northEast.lng&&(map.setMaxBounds(new L.LatLngBounds(new L.LatLng($scope.maxBounds.southWest.lat,$scope.maxBounds.southWest.lng),new L.LatLng($scope.maxBounds.northEast.lat,$scope.maxBounds.northEast.lng))),$scope.$watch("maxBounds",function(a){a.southWest&&a.northEast&&a.southWest.lat&&a.southWest.lng&&a.northEast.lat&&a.northEast.lng&&map.setMaxBounds(new L.LatLngBounds(new L.LatLng(a.southWest.lat,a.southWest.lng),new L.LatLng(a.northEast.lat,a.northEast.lng)))}))}function tryFitBounds(a){if(a){var b=a.southWest,c=a.northEast;if(b&&c&&b.lat&&b.lng&&c.lat&&c.lng){var d=new L.LatLng(b.lat,b.lng),e=new L.LatLng(c.lat,c.lng);map.fitBounds(new L.LatLngBounds(d,e))}}}function setupBounds(){$scope.bounds&&$scope.$watch("bounds",function(a){tryFitBounds(a)})}function setupCenter(){if(!$scope.center)return $log.warn("[AngularJS - Leaflet] 'center' is undefined in the current scope, did you forget to initialize it?"),map.setView([defaults.center.lat,defaults.center.lng],defaults.center.zoom),void 0;void 0!==$scope.center.lat&&null!==$scope.center.lat&&"number"==typeof $scope.center.lat&&void 0!==$scope.center.lng&&null!==$scope.center.lng&&"number"==typeof $scope.center.lng&&void 0!==$scope.center.zoom&&null!==$scope.center.zoom&&"number"==typeof $scope.center.zoom?map.setView([$scope.center.lat,$scope.center.lng],$scope.center.zoom):attrs.center.autoDiscover===!0?map.locate({setView:!0,maxZoom:$scope.leaflet.maxZoom}):($log.warn("[AngularJS - Leaflet] 'center' is incorrect"),map.setView([defaults.center.lat,defaults.center.lng],defaults.center.zoom));var a={lat:$parse("center.lat"),lng:$parse("center.lng"),zoom:$parse("center.zoom")};$scope.$watch("center",function(a,b){return a?(b&&(void 0!==a.lat&&null!==a.lat&&"number"==typeof a.lat&&void 0!==a.lng&&null!==a.lng&&"number"==typeof a.lng&&void 0!==a.zoom&&null!==a.zoom&&"number"==typeof a.zoom?void 0!==b.lat&&null!==b.lat&&"number"==typeof b.lat&&void 0!==b.lng&&null!==b.lng&&"number"==typeof b.lng&&void 0!==b.zoom&&null!==b.zoom&&"number"==typeof b.zoom?(a.lat!==b.lat||a.lng!==b.lng||a.zoom!==b.zoom)&&map.setView([a.lat,a.lng],a.zoom):map.setView([a.lat,a.lng],a.zoom):a.autoDiscover===!0&&b.autoDiscover!==!0?map.locate({setView:!0,maxZoom:$scope.leaflet.maxZoom}):(void 0===a.autoDiscover||null===a.autoDiscover)&&($log.warn("[AngularJS - Leaflet] 'center' is incorrect"),map.setView([defaults.center.lat,defaults.center.lng],defaults.center.zoom))),void 0):($log.warn("[AngularJS - Leaflet] 'center' have been removed?"),map.setView([defaults.center.lat,defaults.center.lng],defaults.center.zoom),void 0)},!0),map.on("moveend",function(){safeApply(function(b){a&&(a.lat.assign(b,map.getCenter().lat),a.lng.assign(b,map.getCenter().lng),a.zoom.assign(b,map.getZoom()))})})}function setupGeojson(){$scope.$watch("geojson",function(a){if(a&&($scope.leaflet.geojson&&map.removeLayer($scope.leaflet.geojson),a.hasOwnProperty("data"))){var b=$scope.geojson.resetStyleOnMouseout;$scope.leaflet.geojson=L.geoJson($scope.geojson.data,{style:$scope.geojson.style,onEachFeature:function(c,d){d.on({mouseover:function(b){safeApply(function(){a.selected=c,$rootScope.$broadcast("leafletDirectiveMap.geojsonMouseover",b)})},mouseout:function(c){b&&$scope.leaflet.geojson.resetStyle(c.target),safeApply(function(){a.selected=void 0,$rootScope.$broadcast("leafletDirectiveMap.geojsonMouseout",c)})},click:function(b){safeApply(function(){$rootScope.$broadcast("leafletDirectiveMap.geojsonClick",a.selected,b)})}})}}).addTo(map)}})}function setupMainMarker(){var a;$scope.marker&&(a=createMarker("marker",$scope.marker,map),$scope.leaflet.marker=attrs.testing?a:str_inspect_hint,a.on("click",function(){safeApply(function(){$rootScope.$broadcast("leafletDirectiveMainMarkerClick")})}))}function setupMarkers(){var a={};if($scope.markers){for(var b in $scope.markers){var c=createMarker("markers."+b,$scope.markers[b],map);null!==c&&(a[b]=c)}$scope.$watch("markers",function(b){for(var c in a)if(void 0===b[c]){if(a[c].closePopup(),void 0!==layers&&null!==layers&&void 0!==layers.overlays)for(var d in layers.overlays)layers.overlays[d]instanceof L.LayerGroup&&layers.overlays[d].hasLayer(a[c])&&layers.overlays[d].removeLayer(a[c]);map.removeLayer(a[c]),delete a[c]}for(var e in b)if(void 0===a[e]){var f=createMarker("markers."+e,$scope.markers[e],map);null!==f&&(a[e]=f)}},!0),$scope.leaflet.markers=attrs.testing?a:str_inspect_hint}}function createMarker(a,b,c){function d(c){return function(d){var f="leafletDirectiveMarker."+c,g=a.replace("markers.","");"click"===c?safeApply(function(){$rootScope.$broadcast("leafletDirectiveMarkersClick",g)}):"dragend"===c&&(safeApply(function(){b.lat=e.getLatLng().lat,b.lng=e.getLatLng().lng}),b.message&&b.focus===!0&&e.openPopup()),safeApply(function(){$rootScope.$broadcast(f,{markerName:g,leafletEvent:d})})}}var e=buildMarker(b);if(void 0===b.layer)c.addLayer(e),b.focus===!0&&e.openPopup();else{if("string"!=typeof b.layer)return $log.error("[AngularJS - Leaflet] A layername must be a string"),null;if(void 0===layers.overlays[b.layer])return $log.error("[AngularJS - Leaflet] You must use a name of an existing layer"),null;var f=layers.overlays[b.layer];if(!(f instanceof L.LayerGroup))return $log.error('[AngularJS - Leaflet] A marker can only be added to a layer of type "group"'),null;f.addLayer(e),c.hasLayer(e)&&b.focus===!0&&e.openPopup()}for(var g=["click","dblclick","mousedown","mouseover","mouseout","contextmenu","dragstart","drag","dragend","move","remove","popupopen","popupclose"],h=0;h<g.length;h++){var i=g[h];e.on(i,d(i),{eventName:i,scope_watch_name:a})}var j=$scope.$watch(a,function(a,b){if(!a){if(e.closePopup(),void 0!==layers&&null!==layers&&void 0!==layers.overlays)for(var d in layers.overlays)layers.overlays[d]instanceof L.LayerGroup&&layers.overlays[d].hasLayer(e)&&layers.overlays[d].removeLayer(e);return c.removeLayer(e),j(),void 0}if(b){if(void 0===a.layer||null===a.layer||"string"!=typeof a.layer)void 0!==b.layer&&null!==b.layer&&"string"==typeof b.layer&&(void 0!==layers.overlays[b.layer]&&layers.overlays[b.layer].hasLayer(e)&&(layers.overlays[b.layer].removeLayer(e),e.closePopup()),c.hasLayer(e)||c.addLayer(e));else if(void 0===b.layer||null===b.layer||b.layer!==a.layer)if("string"==typeof b.layer&&void 0!==layers.overlays[b.layer]&&layers.overlays[b.layer].hasLayer(e)&&layers.overlays[b.layer].removeLayer(e),e.closePopup(),c.hasLayer(e)&&c.removeLayer(e),void 0!==layers.overlays[a.layer]){var f=layers.overlays[a.layer];f instanceof L.LayerGroup?(f.addLayer(e),c.hasLayer(e)&&a.focus===!0&&e.openPopup()):$log.error('[AngularJS - Leaflet] A marker can only be added to a layer of type "group"')}else $log.error("[AngularJS - Leaflet] You must use a name of an existing layer");if(void 0===a.draggable||null===a.draggable||a.draggable!==!0?void 0!==b.draggable&&null!==b.draggable&&b.draggable===!0&&e.dragging.disable():(void 0===b.draggable||null===b.draggable||b.draggable!==!0)&&e.dragging.enable(),void 0===a.icon||null===a.icon||"object"!=typeof a.icon)void 0!==b.icon&&null!==b.icon&&"object"==typeof b.icon&&(e.setIcon(new LeafletIcon),e.closePopup(),e.unbindPopup(),void 0!==a.message&&null!==a.message&&"string"==typeof a.message&&""!==a.message&&e.bindPopup(a.message));else if(void 0===b.icon||null===b.icon||"object"!=typeof b.icon){var g=e.dragging.enabled();Helpers.AwesomeMarkersPlugin.is(a.icon)?e.setIcon(a.icon):Helpers.Leaflet.DivIcon.is(a.icon)||Helpers.Leaflet.Icon.is(a.icon)?e.setIcon(a.icon):e.setIcon(new LeafletIcon(a.icon)),g&&e.dragging.enable(),e.closePopup(),e.unbindPopup(),void 0!==a.message&&null!==a.message&&"string"==typeof a.message&&""!==a.message&&e.bindPopup(a.message)}else if(Helpers.AwesomeMarkersPlugin.is(a.icon)){if(!Helpers.AwesomeMarkersPlugin.equal(a.icon,b.icon)){var h=e.dragging.enabled();e.setIcon(a.icon),h&&e.dragging.enable(),e.closePopup(),e.unbindPopup(),void 0!==a.message&&null!==a.message&&"string"==typeof a.message&&""!==a.message&&e.bindPopup(a.message)}}else if(Helpers.Leaflet.DivIcon.is(a.icon)){if(!Helpers.Leaflet.DivIcon.equal(a.icon,b.icon)){var i=e.dragging.enabled();e.setIcon(a.icon),i&&e.dragging.enable(),e.closePopup(),e.unbindPopup(),void 0!==a.message&&null!==a.message&&"string"==typeof a.message&&""!==a.message&&e.bindPopup(a.message)}}else if(Helpers.Leaflet.Icon.is(a.icon)){if(!Helpers.Leaflet.Icon.equal(a.icon,b.icon)){var k=e.dragging.enabled();e.setIcon(a.icon),k&&e.dragging.enable(),e.closePopup(),e.unbindPopup(),void 0!==a.message&&null!==a.message&&"string"==typeof a.message&&""!==a.message&&e.bindPopup(a.message)}}else if(JSON.stringify(a.icon)!==JSON.stringify(b.icon)){var l=e.dragging.enabled();e.setIcon(new LeafletIcon(a.icon)),l&&e.dragging.enable(),e.closePopup(),e.unbindPopup(),void 0!==a.message&&null!==a.message&&"string"==typeof a.message&&""!==a.message&&e.bindPopup(a.message)}if(void 0===a.message||null===a.message||"string"!=typeof a.message||""===a.message?void 0!==b.message&&null!==b.message&&"string"==typeof b.message&&""!==b.message&&(e.closePopup(),e.unbindPopup()):void 0===b.message||null===b.message||"string"!=typeof b.message||""===b.message?(e.bindPopup(a.message),a.focus===!0&&e.openPopup()):a.message!==b.message&&e.setPopupContent(a.message),void 0===a.focus||null===a.focus||a.focus!==!0?void 0!==b.focus&&null!==b.focus&&b.focus===!0&&e.closePopup():(void 0===b.focus||null===b.focus||b.focus!==!0)&&e.openPopup(),void 0===a.lat||null===a.lat||isNaN(a.lat)||"number"!=typeof a.lat||void 0===a.lng||null===a.lng||isNaN(a.lng)||"number"!=typeof a.lng){if($log.warn("There are problems with lat-lng data, please verify your marker model"),void 0!==layers&&void 0!==layers.overlays)for(var m in layers.overlays)layers.overlays[m]instanceof L.LayerGroup&&layers.overlays[m].hasLayer(e)&&layers.overlays[m].removeLayer(e);c.removeLayer(e)}else{var n=e.getLatLng();if(n.lat!==a.lat||n.lng!==a.lng){var o=!1;void 0!==a.layer&&null!==a.layer&&"string"==typeof a.layer&&Helpers.MarkerClusterPlugin.is(layers.overlays[a.layer])&&(layers.overlays[a.layer].removeLayer(e),o=!0),e.setLatLng([a.lat,a.lng]),o&&layers.overlays[a.layer].addLayer(e)}}}},!0);return e}function buildMarker(a){var b=null;b=a.icon?a.icon:new LeafletIcon;var c={icon:b,draggable:a.draggable?!0:!1};a.title&&(c.title=a.title);var d=new L.marker(a,c);return a.message&&d.bindPopup(a.message),d}function setupPaths(){var a={};if($scope.leaflet.paths=attrs.testing?a:str_inspect_hint,$scope.paths){$log.warn("[AngularJS - Leaflet] Creating polylines and adding them to the map will break the directive's scope's inspection in AngularJS Batarang");for(var b in $scope.paths)a[b]=createPath(b,$scope.paths[b],map);$scope.$watch("paths",function(b){for(var c in b)void 0===a[c]&&(a[c]=createPath(c,b[c],map));for(var d in a)void 0===b[d]&&delete a[d]},!0)}}function createPath(a,b,c){var d=new L.Polyline([],{weight:defaults.path.weight,color:defaults.path.color,opacity:defaults.path.opacity});if(void 0!==b.latlngs){var e=convertToLeafletLatLngs(b.latlngs);d.setLatLngs(e)}void 0!==b.weight&&d.setStyle({weight:b.weight}),void 0!==b.color&&d.setStyle({color:b.color}),void 0!==b.opacity&&d.setStyle({opacity:b.opacity}),c.addLayer(d);var f=$scope.$watch("paths."+a,function(a,b){if(!a)return c.removeLayer(d),f(),void 0;if(b){if(void 0!==a.latlngs&&a.latlngs!==b.latlngs){var e=convertToLeafletLatLngs(a.latlngs);d.setLatLngs(e)}void 0!==a.weight&&a.weight!==b.weight&&d.setStyle({weight:a.weight}),void 0!==a.color&&a.color!==b.color&&d.setStyle({color:a.color}),void 0!==a.opacity&&a.opacity!==b.opacity&&d.setStyle({opacity:a.opacity})}},!0);return d}function convertToLeafletLatLngs(a){var b=a.filter(function(a){return!!a.lat&&!!a.lng}).map(function(a){return new L.LatLng(a.lat,a.lng)});return b}function setupControls(){map.zoomControl&&$scope.defaults&&$scope.defaults.zoomControlPosition&&map.zoomControl.setPosition($scope.defaults.zoomControlPosition),map.zoomControl&&$scope.defaults&&!$scope.defaults.zoomControl&&map.zoomControl.removeFrom(map),map.zoomsliderControl&&$scope.defaults&&!$scope.defaults.zoomsliderControl&&map.zoomsliderControl.removeFrom(map)}function setupCustomControls(){if($scope.customControls)for(var a=0,b=$scope.customControls.length;b>a;a++)map.addControl($scope.customControls[a])}attrs.width&&element.css("width",attrs.width),attrs.height&&element.css("height",attrs.height),$scope.leaflet={},$scope.leaflet.maxZoom=attrs.defaults&&$scope.defaults&&$scope.defaults.maxZoom?parseInt($scope.defaults.maxZoom,10):defaults.maxZoom,$scope.leaflet.minZoom=attrs.defaults&&$scope.defaults&&$scope.defaults.minZoom?parseInt($scope.defaults.minZoom,10):defaults.minZoom,$scope.leaflet.doubleClickZoom=attrs.defaults&&$scope.defaults&&"boolean"==typeof $scope.defaults.doubleClickZoom?$scope.defaults.doubleClickZoom:defaults.doubleClickZoom,$scope.leaflet.scrollWheelZoom=attrs.defaults&&$scope.defaults&&"boolean"==typeof $scope.defaults.scrollWheelZoom?$scope.defaults.scrollWheelZoom:defaults.scrollWheelZoom;var map=new L.Map(element[0],{maxZoom:$scope.leaflet.maxZoom,minZoom:$scope.leaflet.minZoom,doubleClickZoom:$scope.leaflet.doubleClickZoom,scrollWheelZoom:$scope.leaflet.scrollWheelZoom}),layers=null;map.setView([defaults.center.lat,defaults.center.lng],defaults.center.zoom),$scope.leaflet.map=attrs.testing?map:str_inspect_hint,setupMapEventCallbacks(),setupMapEventBroadcasting(),setupControls(),setupLegend(),setupCustomControls(),setupLayers(),setupCenter(),setupMaxBounds(),setupBounds(),setupMainMarker(),setupMarkers(),setupPaths(),setupGeojson(),$scope.$on("leafletDirectiveSetMap",function(a,b){var c=b.shift();map[c].apply(map,b)})}}}]);